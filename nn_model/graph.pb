node {
  name: "input_seq_feature"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "PlaceholderWithDefault/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "PlaceholderWithDefault"
  op: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "qid"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "sorted_label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Variable/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "ExponentialDecay/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "Variable/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/initial_learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
}
node {
  name: "AttenNet/Shape"
  op: "Shape"
  input: "input_seq_feature"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/Shape"
  input: "AttenNet/strided_slice/stack"
  input: "AttenNet/strided_slice/stack_1"
  input: "AttenNet/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/Shape_1"
  op: "Shape"
  input: "input_seq_feature"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/Shape_1"
  input: "AttenNet/strided_slice_1/stack"
  input: "AttenNet/strided_slice_1/stack_1"
  input: "AttenNet/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/zeros/mul"
  op: "Mul"
  input: "AttenNet/strided_slice"
  input: "AttenNet/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/zeros/Less"
  op: "Less"
  input: "AttenNet/zeros/mul"
  input: "AttenNet/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/zeros/packed"
  op: "Pack"
  input: "AttenNet/strided_slice"
  input: "AttenNet/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/zeros"
  op: "Fill"
  input: "AttenNet/zeros/packed"
  input: "AttenNet/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/ones/mul"
  op: "Mul"
  input: "AttenNet/strided_slice"
  input: "AttenNet/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/ones/Less"
  op: "Less"
  input: "AttenNet/ones/mul"
  input: "AttenNet/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/ones/packed"
  op: "Pack"
  input: "AttenNet/strided_slice"
  input: "AttenNet/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/ones"
  op: "Fill"
  input: "AttenNet/ones/packed"
  input: "AttenNet/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/Sum"
  op: "Sum"
  input: "AttenNet/ones"
  input: "AttenNet/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/TensorArray/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/TensorArray"
  op: "TensorArrayV3"
  input: "AttenNet/TensorArray/size"
  attr {
    key: "clear_after_read"
    value {
      b: false
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/while/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/while/Enter"
  op: "Enter"
  input: "AttenNet/while/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "AttenNet/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "AttenNet/while/Enter_1"
  op: "Enter"
  input: "AttenNet/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "AttenNet/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "AttenNet/while/Enter_2"
  op: "Enter"
  input: "AttenNet/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "AttenNet/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "AttenNet/while/Merge"
  op: "Merge"
  input: "AttenNet/while/Enter"
  input: "AttenNet/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Merge_1"
  op: "Merge"
  input: "AttenNet/while/Enter_1"
  input: "AttenNet/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Merge_2"
  op: "Merge"
  input: "AttenNet/while/Enter_2"
  input: "AttenNet/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/while/Shape"
  op: "Shape"
  input: "AttenNet/while/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/strided_slice/stack"
  op: "Const"
  input: "^AttenNet/while/Merge"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/while/strided_slice/stack_1"
  op: "Const"
  input: "^AttenNet/while/Merge"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/strided_slice/stack_2"
  op: "Const"
  input: "^AttenNet/while/Merge"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/while/Shape"
  input: "AttenNet/while/strided_slice/stack"
  input: "AttenNet/while/strided_slice/stack_1"
  input: "AttenNet/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/while/Less"
  op: "Less"
  input: "AttenNet/while/Merge"
  input: "AttenNet/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/LoopCond"
  op: "LoopCond"
  input: "AttenNet/while/Less"
}
node {
  name: "AttenNet/while/Switch"
  op: "Switch"
  input: "AttenNet/while/Merge"
  input: "AttenNet/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/while/Merge"
      }
    }
  }
}
node {
  name: "AttenNet/while/Switch_1"
  op: "Switch"
  input: "AttenNet/while/Merge_1"
  input: "AttenNet/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/while/Merge_1"
      }
    }
  }
}
node {
  name: "AttenNet/while/Switch_2"
  op: "Switch"
  input: "AttenNet/while/Merge_2"
  input: "AttenNet/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/while/Merge_2"
      }
    }
  }
}
node {
  name: "AttenNet/while/Identity"
  op: "Identity"
  input: "AttenNet/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Identity_1"
  op: "Identity"
  input: "AttenNet/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Identity_2"
  op: "Identity"
  input: "AttenNet/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/while/add/y"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/add"
  op: "Add"
  input: "AttenNet/while/Identity"
  input: "AttenNet/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/add_1/y"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/add_1"
  op: "Add"
  input: "AttenNet/while/Identity"
  input: "AttenNet/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_1/stack"
  op: "Pack"
  input: "AttenNet/while/Identity"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "AttenNet/while/add_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/while/Identity_1"
  input: "AttenNet/while/strided_slice_1/stack"
  input: "AttenNet/while/strided_slice_1/stack_1"
  input: "AttenNet/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/while/zeros/Less/y"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/while/zeros/Less"
  op: "Less"
  input: "AttenNet/while/strided_slice_1"
  input: "AttenNet/while/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/zeros/packed"
  op: "Pack"
  input: "AttenNet/while/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/while/zeros/Const"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/while/zeros"
  op: "Fill"
  input: "AttenNet/while/zeros/packed"
  input: "AttenNet/while/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/add_2/y"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/add_2"
  op: "Add"
  input: "AttenNet/while/Identity"
  input: "AttenNet/while/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_2/stack"
  op: "Pack"
  input: "AttenNet/while/Identity"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "AttenNet/while/add_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/while/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/while/Identity_1"
  input: "AttenNet/while/strided_slice_2/stack"
  input: "AttenNet/while/strided_slice_2/stack_1"
  input: "AttenNet/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/while/sub"
  op: "Sub"
  input: "AttenNet/while/sub/Enter"
  input: "AttenNet/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/sub/Enter"
  op: "Enter"
  input: "AttenNet/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "AttenNet/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "AttenNet/while/ones/Reshape/shape"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/while/ones/Reshape"
  op: "Reshape"
  input: "AttenNet/while/sub"
  input: "AttenNet/while/ones/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/ones/Const"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/while/ones"
  op: "Fill"
  input: "AttenNet/while/ones/Reshape"
  input: "AttenNet/while/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/concat/axis"
  op: "Const"
  input: "^AttenNet/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/while/concat"
  op: "ConcatV2"
  input: "AttenNet/while/zeros"
  input: "AttenNet/while/ones"
  input: "AttenNet/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "AttenNet/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "AttenNet/while/Identity"
  input: "AttenNet/while/concat"
  input: "AttenNet/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/while/concat"
      }
    }
  }
}
node {
  name: "AttenNet/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "AttenNet/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/while/concat"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "AttenNet/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "AttenNet/while/NextIteration"
  op: "NextIteration"
  input: "AttenNet/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/NextIteration_1"
  op: "NextIteration"
  input: "AttenNet/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/NextIteration_2"
  op: "NextIteration"
  input: "AttenNet/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/while/Exit"
  op: "Exit"
  input: "AttenNet/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Exit_1"
  op: "Exit"
  input: "AttenNet/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/while/Exit_2"
  op: "Exit"
  input: "AttenNet/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "AttenNet/TensorArray"
  input: "AttenNet/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/TensorArray"
      }
    }
  }
}
node {
  name: "AttenNet/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/TensorArrayStack/range"
  op: "Range"
  input: "AttenNet/TensorArrayStack/range/start"
  input: "AttenNet/TensorArrayStack/TensorArraySizeV3"
  input: "AttenNet/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/TensorArray"
      }
    }
  }
}
node {
  name: "AttenNet/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "AttenNet/TensorArray"
  input: "AttenNet/TensorArrayStack/range"
  input: "AttenNet/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AttenNet/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/transpose"
  op: "Transpose"
  input: "input_seq_feature"
  input: "AttenNet/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/transpose_1"
  op: "Transpose"
  input: "AttenNet/zeros"
  input: "AttenNet/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/transpose_2"
  op: "Transpose"
  input: "AttenNet/TensorArrayStack/TensorArrayGatherV3"
  input: "AttenNet/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias"
  input: "AttenNet/model/transformer/r_w_bias/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_w_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias"
  input: "AttenNet/model/transformer/r_r_bias/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_r_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/Shape"
  op: "Shape"
  input: "AttenNet/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/Shape"
  input: "AttenNet/model/transformer/strided_slice/stack"
  input: "AttenNet/model/transformer/strided_slice/stack_1"
  input: "AttenNet/model/transformer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/Shape_1"
  op: "Shape"
  input: "AttenNet/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/Shape_1"
  input: "AttenNet/model/transformer/strided_slice_1/stack"
  input: "AttenNet/model/transformer/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/add"
  op: "Add"
  input: "AttenNet/model/transformer/add/x"
  input: "AttenNet/model/transformer/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/transpose_2"
  input: "AttenNet/model/transformer/strided_slice_2/stack"
  input: "AttenNet/model/transformer/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_3"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/Shape_2"
  input: "AttenNet/model/transformer/strided_slice_3/stack"
  input: "AttenNet/model/transformer/strided_slice_3/stack_1"
  input: "AttenNet/model/transformer/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/strided_slice_3"
  input: "AttenNet/model/transformer/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/zeros/mul"
  input: "AttenNet/model/transformer/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/Less"
  op: "Less"
  input: "AttenNet/model/transformer/zeros/mul_1"
  input: "AttenNet/model/transformer/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/packed"
  op: "Pack"
  input: "AttenNet/model/transformer/strided_slice_3"
  input: "AttenNet/model/transformer/zeros/packed/1"
  input: "AttenNet/model/transformer/strided_slice"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/zeros/packed"
  input: "AttenNet/model/transformer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/zeros"
  input: "AttenNet/model/transformer/strided_slice_2"
  input: "AttenNet/model/transformer/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_4"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/concat"
  input: "AttenNet/model/transformer/strided_slice_4/stack"
  input: "AttenNet/model/transformer/strided_slice_4/stack_1"
  input: "AttenNet/model/transformer/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 8
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/Greater"
  op: "Greater"
  input: "AttenNet/model/transformer/strided_slice_4"
  input: "AttenNet/model/transformer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/Greater"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/Minimum"
  op: "Minimum"
  input: "AttenNet/model/transformer/strided_slice_1"
  input: "AttenNet/model/transformer/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/concat/values_1"
  op: "Pack"
  input: "AttenNet/model/transformer/eye/Minimum"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/eye/shape"
  input: "AttenNet/model/transformer/eye/concat/values_1"
  input: "AttenNet/model/transformer/eye/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/ones"
  op: "Fill"
  input: "AttenNet/model/transformer/eye/concat"
  input: "AttenNet/model/transformer/eye/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/eye/MatrixDiag"
  op: "MatrixDiag"
  input: "AttenNet/model/transformer/eye/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Neg"
  op: "Neg"
  input: "AttenNet/model/transformer/eye/MatrixDiag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/strided_slice_1"
  input: "AttenNet/model/transformer/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/Less"
  op: "Less"
  input: "AttenNet/model/transformer/zeros_1/mul"
  input: "AttenNet/model/transformer/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/packed"
  op: "Pack"
  input: "AttenNet/model/transformer/strided_slice_1"
  input: "AttenNet/model/transformer/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_1"
  op: "Fill"
  input: "AttenNet/model/transformer/zeros_1/packed"
  input: "AttenNet/model/transformer/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/zeros_1"
  input: "AttenNet/model/transformer/Neg"
  input: "AttenNet/model/transformer/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_5"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/concat_1"
  input: "AttenNet/model/transformer/strided_slice_5/stack"
  input: "AttenNet/model/transformer/strided_slice_5/stack_1"
  input: "AttenNet/model/transformer/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 12
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/Cast"
  input: "AttenNet/model/transformer/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Greater_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/Greater_1"
  op: "Greater"
  input: "AttenNet/model/transformer/add_1"
  input: "AttenNet/model/transformer/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Cast_1"
  op: "Cast"
  input: "AttenNet/model/transformer/Greater_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000}\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32000
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/read"
  op: "Identity"
  input: "AttenNet/model/transformer/word_embedding/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/embedding_lookup"
  op: "GatherV2"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/read"
  input: "AttenNet/transpose"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
  input: "AttenNet/model/transformer/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/dropout/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/dropout/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
  input: "AttenNet/model/transformer/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/dropout/cond/Identity"
  input: "AttenNet/model/transformer/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias"
  input: "AttenNet/model/transformer/r_s_bias/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_s_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed"
  input: "AttenNet/model/transformer/seg_embed/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/read"
  op: "Identity"
  input: "AttenNet/model/transformer/seg_embed"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/zeros_2/mul/x"
  input: "AttenNet/model/transformer/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/Less"
  op: "Less"
  input: "AttenNet/model/transformer/zeros_2/mul"
  input: "AttenNet/model/transformer/zeros_2/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/packed/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/packed"
  op: "Pack"
  input: "AttenNet/model/transformer/zeros_2/packed/0"
  input: "AttenNet/model/transformer/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/zeros_2"
  op: "Fill"
  input: "AttenNet/model/transformer/zeros_2/packed"
  input: "AttenNet/model/transformer/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_2"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/zeros_2"
  input: "AttenNet/transpose_1"
  input: "AttenNet/model/transformer/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_6"
  op: "StridedSlice"
  input: "AttenNet/transpose_1"
  input: "AttenNet/model/transformer/strided_slice_6/stack"
  input: "AttenNet/model/transformer/strided_slice_6/stack_1"
  input: "AttenNet/model/transformer/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_7"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/concat_2"
  input: "AttenNet/model/transformer/strided_slice_7/stack"
  input: "AttenNet/model/transformer/strided_slice_7/stack_1"
  input: "AttenNet/model/transformer/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/Equal"
  op: "Equal"
  input: "AttenNet/model/transformer/strided_slice_6"
  input: "AttenNet/model/transformer/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/LogicalNot"
  op: "LogicalNot"
  input: "AttenNet/model/transformer/Equal"
}
node {
  name: "AttenNet/model/transformer/Cast_2"
  op: "Cast"
  input: "AttenNet/model/transformer/LogicalNot"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/one_hot/on_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/one_hot/off_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/one_hot/depth"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/one_hot"
  op: "OneHot"
  input: "AttenNet/model/transformer/Cast_2"
  input: "AttenNet/model/transformer/one_hot/depth"
  input: "AttenNet/model/transformer/one_hot/on_value"
  input: "AttenNet/model/transformer/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "AttenNet/model/transformer/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/range/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/range/start"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/range/Cast_1"
  op: "Cast"
  input: "AttenNet/model/transformer/range/limit"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/range"
  op: "Range"
  input: "AttenNet/model/transformer/range/Cast"
  input: "AttenNet/model/transformer/range/Cast_1"
  input: "AttenNet/model/transformer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/range"
  input: "AttenNet/model/transformer/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/pow/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10000.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/pow"
  op: "Pow"
  input: "AttenNet/model/transformer/pow/x"
  input: "AttenNet/model/transformer/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/truediv_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/truediv_1"
  op: "RealDiv"
  input: "AttenNet/model/transformer/truediv_1/x"
  input: "AttenNet/model/transformer/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Neg_1"
  op: "Neg"
  input: "AttenNet/model/transformer/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/range_1/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/range_1/Cast_1"
  op: "Cast"
  input: "AttenNet/model/transformer/Neg_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/range_1"
  op: "Range"
  input: "AttenNet/model/transformer/range_1/Cast"
  input: "AttenNet/model/transformer/range_1/Cast_1"
  input: "AttenNet/model/transformer/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/range_1"
  input: "AttenNet/model/transformer/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/truediv_1"
  input: "AttenNet/model/transformer/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/ExpandDims"
  op: "ExpandDims"
  input: "AttenNet/model/transformer/einsum/transpose"
  input: "AttenNet/model/transformer/einsum/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/ExpandDims_1"
  op: "ExpandDims"
  input: "AttenNet/model/transformer/einsum/transpose_1"
  input: "AttenNet/model/transformer/einsum/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/Mul"
  op: "Mul"
  input: "AttenNet/model/transformer/einsum/ExpandDims"
  input: "AttenNet/model/transformer/einsum/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/einsum/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/einsum/Mul"
  input: "AttenNet/model/transformer/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/Sin"
  op: "Sin"
  input: "AttenNet/model/transformer/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/Cos"
  op: "Cos"
  input: "AttenNet/model/transformer/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/concat_3"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/Sin"
  input: "AttenNet/model/transformer/Cos"
  input: "AttenNet/model/transformer/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_8"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/concat_3"
  input: "AttenNet/model/transformer/strided_slice_8/stack"
  input: "AttenNet/model/transformer/strided_slice_8/stack_1"
  input: "AttenNet/model/transformer/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/Tile/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/Tile/multiples"
  op: "Pack"
  input: "AttenNet/model/transformer/Tile/multiples/0"
  input: "AttenNet/model/transformer/strided_slice"
  input: "AttenNet/model/transformer/Tile/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/Tile"
  op: "Tile"
  input: "AttenNet/model/transformer/strided_slice_8"
  input: "AttenNet/model/transformer/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/Tile"
  input: "AttenNet/model/transformer/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/Tile"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/mul"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/Tile"
  input: "AttenNet/model/transformer/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/Tile"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_1/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/dropout_1/cond/Identity"
  input: "AttenNet/model/transformer/dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_9"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_s_bias/read"
  input: "AttenNet/model/transformer/strided_slice_9/stack"
  input: "AttenNet/model/transformer/strided_slice_9/stack_1"
  input: "AttenNet/model/transformer/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_10"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/seg_embed/read"
  input: "AttenNet/model/transformer/strided_slice_10/stack"
  input: "AttenNet/model/transformer/strided_slice_10/stack_1"
  input: "AttenNet/model/transformer/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_w_bias/read"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_r_bias/read"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout_1/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/layer_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/mul"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice"
  op: "Slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice/begin"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_6"
  input: "AttenNet/model/transformer/layer_0/rel_attn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_5"
  input: "AttenNet/model/transformer/layer_0/rel_attn/sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_7"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice_8"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/0"
  input: "AttenNet/model/transformer/layer_0/rel_attn/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1"
  op: "Slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/begin"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add_2"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/strided_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/strided_slice_10"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape/0"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/0"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/one_hot"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/strided_slice_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add_3"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add_4"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_4"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000150474662e+30
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul_1/x"
  input: "AttenNet/model/transformer/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/sub_1"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Sub_2"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Rank_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range"
  op: "Range"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range/start"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range/limit"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_1"
  op: "Range"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_1/start"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat/values_1"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat/values_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat/values_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/sub_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Softmax"
  op: "Softmax"
  input: "AttenNet/model/transformer/layer_0/rel_attn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/Sub_3"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Rank_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_2/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_2"
  op: "Range"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_2/start"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_2/limit"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/range_3"
  op: "Range"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_3/start"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/values_1"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Sub_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/values_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/range_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/values_3"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Softmax"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Shape_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/strided_slice_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_2/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/mul_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/strided_slice"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge"
  input: "AttenNet/model/transformer/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/read"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/free"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Prod"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Prod_1"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2_1"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/free"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/stack"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/read"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Const_2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd"
  op: "BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  op: "Relu"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/free"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Prod"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Prod_1"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2_1"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/free"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/stack"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Prod"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/read"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Const_2"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
  op: "BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_0/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/read"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_11"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_s_bias/read"
  input: "AttenNet/model/transformer/strided_slice_11/stack"
  input: "AttenNet/model/transformer/strided_slice_11/stack_1"
  input: "AttenNet/model/transformer/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/strided_slice_12"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/seg_embed/read"
  input: "AttenNet/model/transformer/strided_slice_12/stack"
  input: "AttenNet/model/transformer/strided_slice_12/stack_1"
  input: "AttenNet/model/transformer/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_w_bias/read"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/r_r_bias/read"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout_1/cond/Merge"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/layer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/mul"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice"
  op: "Slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice/begin"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_6"
  input: "AttenNet/model/transformer/layer_1/rel_attn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_5"
  input: "AttenNet/model/transformer/layer_1/rel_attn/sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_7"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice_8"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/0"
  input: "AttenNet/model/transformer/layer_1/rel_attn/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1"
  op: "Slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/begin"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add_2"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  input: "AttenNet/model/transformer/strided_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/strided_slice_12"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape/0"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/0"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/one_hot"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/strided_slice_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add_3"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add_4"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_4"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000150474662e+30
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul_1/x"
  input: "AttenNet/model/transformer/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/sub_1"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Sub_2"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Rank_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range"
  op: "Range"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range/start"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range/limit"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_1"
  op: "Range"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_1/start"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat/values_1"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat/values_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat/values_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/sub_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Softmax"
  op: "Softmax"
  input: "AttenNet/model/transformer/layer_1/rel_attn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/Sub_3"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Rank_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_2/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_2"
  op: "Range"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_2/start"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_2/limit"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/range_3"
  op: "Range"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_3/start"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/values_1"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Sub_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/values_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/range_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/values_3"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Softmax"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Shape_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/strided_slice_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape/2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_2/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/mul_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/strided_slice"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape/1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/read"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/free"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Prod"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Prod_1"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2_1"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/free"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/stack"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/read"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Const_2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd"
  op: "BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  op: "Relu"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/free"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/free"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Prod"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Prod_1"
  op: "Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2_1"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/free"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/axes"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/stack"
  op: "Pack"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Prod"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/read"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/GatherV2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Const_2"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
  op: "BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/layer_1/ff/drop_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance"
  op: "Mean"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/read"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/max"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/sub/x"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model/transformer/dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/truediv/x"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/random_uniform"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/Identity"
  op: "Identity"
  input: "AttenNet/model/transformer/dropout_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/dropout_2/cond/Merge"
  op: "Merge"
  input: "AttenNet/model/transformer/dropout_2/cond/Identity"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/strided_slice"
  op: "StridedSlice"
  input: "AttenNet/model/transformer/dropout_2/cond/Merge"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack_1"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/RandomStandardNormal"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal"
  op: "Add"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/mul"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel"
  input: "AttenNet/model/sequnece_summary/summary/kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias"
  input: "AttenNet/model/sequnece_summary/summary/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias"
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/summary/MatMul"
  op: "MatMul"
  input: "AttenNet/model_1/sequnece_summary/strided_slice"
  input: "AttenNet/model/sequnece_summary/summary/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/summary/BiasAdd"
  op: "BiasAdd"
  input: "AttenNet/model_1/sequnece_summary/summary/MatMul"
  input: "AttenNet/model/sequnece_summary/summary/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  op: "Tanh"
  input: "AttenNet/model_1/sequnece_summary/summary/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  op: "Identity"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/switch_f"
  op: "Identity"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/rate"
  op: "Const"
  input: "^AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model_1/sequnece_summary/summary/Tanh"
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/max"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/sub"
  op: "Sub"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/sub/x"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^AttenNet/model_1/sequnece_summary/dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/truediv/x"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/random_uniform"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul"
  op: "Mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch:1"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/Identity"
  op: "Identity"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model_1/sequnece_summary/summary/Tanh"
      }
    }
  }
}
node {
  name: "AttenNet/model_1/sequnece_summary/dropout/cond/Merge"
  op: "Merge"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Identity"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AttenNet/transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/transpose_3"
  op: "Transpose"
  input: "AttenNet/model/transformer/dropout_2/cond/Merge"
  input: "AttenNet/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.24373334646224976
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.24373334646224976
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Merge"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "label"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "label"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Minimum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "Minimum/x"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "Maximum"
  op: "Maximum"
  input: "Minimum"
  input: "Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "add/x"
  input: "Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "dense/BiasAdd"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "dense/BiasAdd"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "sub_1"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "sub_1"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Neg"
  op: "Neg"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "logistic_loss/Neg"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/mul"
  op: "Mul"
  input: "sub_1"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/sub"
  op: "Sub"
  input: "logistic_loss/Select"
  input: "logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Exp"
  op: "Exp"
  input: "logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Log1p"
  op: "Log1p"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss"
  op: "Add"
  input: "logistic_loss/sub"
  input: "logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_2"
  op: "Transpose"
  input: "qid"
  input: "transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "qid"
  input: "transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "sub_2"
  input: "Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "input_seq_feature"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ones/mul"
  op: "Mul"
  input: "strided_slice"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "ones/Less"
  op: "Less"
  input: "ones/mul"
  input: "ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones/packed"
  op: "Pack"
  input: "strided_slice"
  input: "strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones"
  op: "Fill"
  input: "ones/packed"
  input: "ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_1/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "ones_1/Less"
  op: "Less"
  input: "strided_slice"
  input: "ones_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_1/packed"
  op: "Pack"
  input: "strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ones_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_1"
  op: "Fill"
  input: "ones_1/packed"
  input: "ones_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Diag"
  op: "Diag"
  input: "ones_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "ones"
  input: "Diag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "Cast"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul_1"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Equal_1"
  op: "Equal"
  input: "Sum"
  input: "Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "Equal_1"
  input: "Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "cond/Const"
  op: "Const"
  input: "^cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cond/mul"
  op: "Mul"
  input: "cond/mul/Switch"
  input: "cond/mul/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond/mul/Switch"
  op: "Switch"
  input: "logistic_loss"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_loss"
      }
    }
  }
}
node {
  name: "cond/mul/Switch_1"
  op: "Switch"
  input: "mul_1"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "cond/Const_1"
  op: "Const"
  input: "^cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cond/Sum"
  op: "Sum"
  input: "cond/mul"
  input: "cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cond/truediv"
  op: "RealDiv"
  input: "cond/Sum"
  input: "cond/truediv/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond/truediv/Switch"
  op: "Switch"
  input: "Sum"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Sum"
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/truediv"
  input: "cond/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Cast_1"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "truediv"
  input: "mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000
      }
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "global_step/read"
  input: "sub_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "PolynomialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_2"
  op: "Cast"
  input: "sub_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 999000
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3"
  op: "Cast"
  input: "PolynomialDecay/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "PolynomialDecay/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 999000.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Minimum"
  op: "Minimum"
  input: "PolynomialDecay/Cast_2"
  input: "PolynomialDecay/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay/div"
  op: "RealDiv"
  input: "PolynomialDecay/Minimum"
  input: "PolynomialDecay/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay/sub"
  op: "Sub"
  input: "PolynomialDecay/initial_learning_rate"
  input: "PolynomialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub_1"
  op: "Sub"
  input: "PolynomialDecay/sub_1/x"
  input: "PolynomialDecay/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay/Pow"
  op: "Pow"
  input: "PolynomialDecay/sub_1"
  input: "PolynomialDecay/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay/Mul"
  op: "Mul"
  input: "PolynomialDecay/sub"
  input: "PolynomialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PolynomialDecay"
  op: "Add"
  input: "PolynomialDecay/Mul"
  input: "PolynomialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000
      }
    }
  }
}
node {
  name: "Less"
  op: "Less"
  input: "global_step/read"
  input: "Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Select"
  op: "Select"
  input: "Less"
  input: "mul_2"
  input: "PolynomialDecay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/Fill"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cond/Merge_grad/cond_grad"
  input: "^gradients/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cond/Merge_grad/cond_grad:1"
  input: "^gradients/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/cond/truediv_grad/Shape"
  input: "gradients/cond/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/cond/Merge_grad/tuple/control_dependency"
  input: "cond/truediv/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/cond/truediv_grad/RealDiv"
  input: "gradients/cond/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/cond/truediv_grad/Sum"
  input: "gradients/cond/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Neg"
  op: "Neg"
  input: "cond/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/cond/truediv_grad/Neg"
  input: "cond/truediv/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/cond/truediv_grad/RealDiv_1"
  input: "cond/truediv/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/mul"
  op: "Mul"
  input: "gradients/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/cond/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/cond/truediv_grad/mul"
  input: "gradients/cond/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cond/truediv_grad/Sum_1"
  input: "gradients/cond/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cond/truediv_grad/Reshape"
  input: "^gradients/cond/truediv_grad/Reshape_1"
}
node {
  name: "gradients/cond/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cond/truediv_grad/Reshape"
  input: "^gradients/cond/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cond/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/cond/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cond/truediv_grad/Reshape_1"
  input: "^gradients/cond/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cond/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/cond/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/cond/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/cond/truediv_grad/tuple/control_dependency"
  input: "gradients/cond/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/Sum_grad/Shape"
  op: "Shape"
  input: "cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/cond/Sum_grad/Reshape"
  input: "gradients/cond/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Shape"
  op: "Shape"
  input: "cond/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Shape_1"
  op: "Shape"
  input: "cond/mul/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/cond/mul_grad/Shape"
  input: "gradients/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Mul"
  op: "Mul"
  input: "gradients/cond/Sum_grad/Tile"
  input: "cond/mul/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Sum"
  op: "Sum"
  input: "gradients/cond/mul_grad/Mul"
  input: "gradients/cond/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/cond/mul_grad/Sum"
  input: "gradients/cond/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Mul_1"
  op: "Mul"
  input: "cond/mul/Switch"
  input: "gradients/cond/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/cond/mul_grad/Mul_1"
  input: "gradients/cond/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cond/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cond/mul_grad/Sum_1"
  input: "gradients/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cond/mul_grad/Reshape"
  input: "^gradients/cond/mul_grad/Reshape_1"
}
node {
  name: "gradients/cond/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cond/mul_grad/Reshape"
  input: "^gradients/cond/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cond/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/cond/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cond/mul_grad/Reshape_1"
  input: "^gradients/cond/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cond/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "logistic_loss"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity"
  op: "Identity"
  input: "gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  input: "^gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cond/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/cond/mul_grad/tuple/control_dependency"
  input: "gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Shape"
  op: "Shape"
  input: "logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss_grad/Shape"
  input: "gradients/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Sum"
  op: "Sum"
  input: "gradients/cond/mul/Switch_grad/cond_grad"
  input: "gradients/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss_grad/Sum"
  input: "gradients/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/cond/mul/Switch_grad/cond_grad"
  input: "gradients/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss_grad/Sum_1"
  input: "gradients/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_grad/Reshape"
  input: "^gradients/logistic_loss_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_grad/Reshape"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_grad/Reshape_1"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss/sub_grad/Shape"
  input: "gradients/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss/sub_grad/Sum"
  input: "gradients/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss/sub_grad/Neg"
  input: "gradients/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/sub_grad/Reshape"
  input: "^gradients/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/sub_grad/Reshape"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/sub_grad/Reshape_1"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients/logistic_loss/Log1p_grad/add/x"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select_1"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/logistic_loss/mul_grad/Shape"
  input: "gradients/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients/logistic_loss/mul_grad/Mul"
  input: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/logistic_loss/mul_grad/Sum"
  input: "gradients/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "sub_1"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/logistic_loss/mul_grad/Mul_1"
  input: "gradients/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/logistic_loss/mul_grad/Sum_1"
  input: "gradients/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/mul_grad/Reshape"
  input: "^gradients/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Reshape"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Reshape_1"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss/Log1p_grad/mul"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Exp_grad/mul"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape_1"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_1_grad/Shape"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Sum"
  input: "gradients/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_1_grad/Neg"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sub_1_grad/Reshape"
  input: "^gradients/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_1_grad/Reshape"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_1_grad/Reshape_1"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/sub_1_grad/tuple/control_dependency_1"
  input: "gradients/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/sub_1_grad/tuple/control_dependency"
  input: "gradients/transpose_1_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_1"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_1"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/Merge"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_1"
  op: "Identity"
  input: "gradients/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  input: "^gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/Shape_2"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  input: "AttenNet/model_1/sequnece_summary/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_2"
  op: "Identity"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  input: "^gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/Shape_3"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_2"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model_1/sequnece_summary/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "AttenNet/model_1/sequnece_summary/summary/Tanh"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/Tanh_grad/TanhGrad"
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/Tanh_grad/TanhGrad"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency"
  input: "AttenNet/model/sequnece_summary/summary/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model_1/sequnece_summary/strided_slice"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/Shape"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack_1"
  input: "AttenNet/model_1/sequnece_summary/strided_slice/stack_2"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/StridedSliceGrad"
  input: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_3"
  op: "Identity"
  input: "gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  input: "^gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/Shape_4"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1"
  input: "AttenNet/model/transformer/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_4"
  op: "Identity"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  input: "^gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/Shape_5"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_4"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/StopGradient"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_5"
  op: "Identity"
  input: "gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  input: "^gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/Shape_6"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_1/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_6"
  op: "Identity"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_6/Const"
  op: "Const"
  input: "^gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_6"
  op: "Fill"
  input: "gradients/Shape_7"
  input: "gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_6"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_6"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_6"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/transpose"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_7"
  op: "Identity"
  input: "gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_7/Const"
  op: "Const"
  input: "^gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_7"
  op: "Fill"
  input: "gradients/Shape_8"
  input: "gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_1/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_8"
  op: "Identity"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_8/Const"
  op: "Const"
  input: "^gradients/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_8"
  op: "Fill"
  input: "gradients/Shape_9"
  input: "gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_8"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_7"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Relu_grad/ReluGrad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/add_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/StopGradient"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_9"
  op: "Identity"
  input: "gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_9/Const"
  op: "Const"
  input: "^gradients/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_9"
  op: "Fill"
  input: "gradients/Shape_10"
  input: "gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_10"
  op: "Identity"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_10/Const"
  op: "Const"
  input: "^gradients/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_10"
  op: "Fill"
  input: "gradients/Shape_11"
  input: "gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_10"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_11"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_8/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_11"
  op: "Identity"
  input: "gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_11/Const"
  op: "Const"
  input: "^gradients/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_11"
  op: "Fill"
  input: "gradients/Shape_12"
  input: "gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_1/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_12"
  op: "Identity"
  input: "gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_12/Const"
  op: "Const"
  input: "^gradients/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_12"
  op: "Fill"
  input: "gradients/Shape_13"
  input: "gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_12"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_12"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_1_grad/transpose"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Softmax_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_1/rel_attn/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_4"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/mul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_4_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Rank"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/begin"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/sub_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Reshape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_3_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_1_grad/Pad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/stack"
  op: "Pack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Rank"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice/begin"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/sub_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Reshape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Slice_grad/Pad"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_7/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_4/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/Shape"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_1/strided_slice/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_12_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_12_grad/Shape"
  input: "AttenNet/model/transformer/strided_slice_12/stack"
  input: "AttenNet/model/transformer/strided_slice_12/stack_1"
  input: "AttenNet/model/transformer/strided_slice_12/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_1_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_5/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_6/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/Shape"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_1/strided_slice_1/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_13"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_11_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_11_grad/Shape"
  input: "AttenNet/model/transformer/strided_slice_11/stack"
  input: "AttenNet/model/transformer/strided_slice_11/stack_1"
  input: "AttenNet/model/transformer/strided_slice_11/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_14"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_14"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/StopGradient"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_13"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_13"
  op: "Identity"
  input: "gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_14"
  op: "Shape"
  input: "gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_13/Const"
  op: "Const"
  input: "^gradients/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_13"
  op: "Fill"
  input: "gradients/Shape_14"
  input: "gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_14"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd"
  input: "AttenNet/model/transformer/layer_0/ff/drop_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_14"
  op: "Identity"
  input: "gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_15"
  op: "Shape"
  input: "gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_14/Const"
  op: "Const"
  input: "^gradients/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_14"
  op: "Fill"
  input: "gradients/Shape_15"
  input: "gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_14"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_17"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_17"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/transpose"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_15"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_15"
  op: "Identity"
  input: "gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_16"
  op: "Shape"
  input: "gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_15/Const"
  op: "Const"
  input: "^gradients/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_15"
  op: "Fill"
  input: "gradients/Shape_16"
  input: "gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_16"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  input: "AttenNet/model/transformer/layer_0/ff/drop_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_16"
  op: "Identity"
  input: "gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_17"
  op: "Shape"
  input: "gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_16/Const"
  op: "Const"
  input: "^gradients/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_16"
  op: "Fill"
  input: "gradients/Shape_17"
  input: "gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_16"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/drop_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_18"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Relu_grad/ReluGrad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/add_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/StopGradient"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/add"
  op: "Add"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean/reduction_indices"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/add"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range/start"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Size"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/range"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/mod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_3"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Shape_3"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Prod_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Prod"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_17"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_17"
  op: "Identity"
  input: "gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_18"
  op: "Shape"
  input: "gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_17/Const"
  op: "Const"
  input: "^gradients/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_17"
  op: "Fill"
  input: "gradients/Shape_18"
  input: "gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_18"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_18"
  op: "Identity"
  input: "gradients/Switch_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_19"
  op: "Shape"
  input: "gradients/Switch_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_18/Const"
  op: "Const"
  input: "^gradients/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_18"
  op: "Fill"
  input: "gradients/Shape_19"
  input: "gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_18"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_22"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_8/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch_19"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_19"
  op: "Identity"
  input: "gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_20"
  op: "Shape"
  input: "gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_19/Const"
  op: "Const"
  input: "^gradients/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_19"
  op: "Fill"
  input: "gradients/Shape_20"
  input: "gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_20"
  op: "Switch"
  input: "AttenNet/model/transformer/layer_0/rel_attn/transpose_1"
  input: "AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_20"
  op: "Identity"
  input: "gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_21"
  op: "Shape"
  input: "gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_20/Const"
  op: "Const"
  input: "^gradients/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_20"
  op: "Fill"
  input: "gradients/Shape_21"
  input: "gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_20"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_23"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_1_grad/transpose"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Softmax_grad/mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Neg"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/layer_0/rel_attn/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_4"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/mul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_4_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Rank"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/begin"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/sub_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Reshape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_3_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_1_grad/Pad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/stack"
  op: "Pack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Rank"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Reshape"
  op: "Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice/begin"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/sub"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/sub_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Reshape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Slice_grad/Pad"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_7/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_4/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/strided_slice_grad/Shape"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack_1"
  input: "AttenNet/model/transformer/layer_0/strided_slice/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/MatMul_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_10_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_10_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_10_grad/Shape"
  input: "AttenNet/model/transformer/strided_slice_10/stack"
  input: "AttenNet/model/transformer/strided_slice_10/stack_1"
  input: "AttenNet/model/transformer/strided_slice_10/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_1_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_5/transpose_1_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_6/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_10_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/strided_slice_1_grad/Shape"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_1"
  input: "AttenNet/model/transformer/layer_0/strided_slice_1/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_1_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_26"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_9_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/strided_slice_9_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_9_grad/Shape"
  input: "AttenNet/model/transformer/strided_slice_9/stack"
  input: "AttenNet/model/transformer/strided_slice_9/stack_1"
  input: "AttenNet/model/transformer/strided_slice_9/stack_2"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/layer_0/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_2_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
  input: "gradients/AttenNet/model/transformer/strided_slice_9_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2_grad/Reshape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul_1"
  input: "^gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/control_dependency"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/Reshape_1_grad/Reshape"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/tuple/control_dependency_1"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_grad/transpose"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/AddN_29"
  input: "AttenNet/model/transformer/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/cond_grad"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/cond_grad:1"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Mul"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/mul"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_21"
  op: "Switch"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
  input: "AttenNet/model/transformer/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_21"
  op: "Identity"
  input: "gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_22"
  op: "Shape"
  input: "gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_21/Const"
  op: "Const"
  input: "^gradients/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_21"
  op: "Fill"
  input: "gradients/Shape_22"
  input: "gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "AttenNet/model/transformer/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Mul"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch:1"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Mul_1"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Sum_1"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_22"
  op: "Switch"
  input: "AttenNet/model/transformer/word_embedding/embedding_lookup/Identity"
  input: "AttenNet/model/transformer/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_22"
  op: "Identity"
  input: "gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_23"
  op: "Shape"
  input: "gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_22/Const"
  op: "Const"
  input: "^gradients/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_22"
  op: "Fill"
  input: "gradients/Shape_23"
  input: "gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_22"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/AttenNet/model/transformer/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "gradients/AttenNet/model/transformer/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000}\000\000\000\000\000\000d\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Cast"
  op: "Cast"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Size"
  op: "Size"
  input: "AttenNet/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Size"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Cast"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/ExpandDims"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/strided_slice"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_30"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "AttenNet/transpose"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_24"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_25"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_26"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_27"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_28"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_29"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_30"
  op: "L2Loss"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_31"
  op: "L2Loss"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_32"
  op: "L2Loss"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_33"
  op: "L2Loss"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_34"
  op: "L2Loss"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  input: "global_norm/L2Loss_14"
  input: "global_norm/L2Loss_15"
  input: "global_norm/L2Loss_16"
  input: "global_norm/L2Loss_17"
  input: "global_norm/L2Loss_18"
  input: "global_norm/L2Loss_19"
  input: "global_norm/L2Loss_20"
  input: "global_norm/L2Loss_21"
  input: "global_norm/L2Loss_22"
  input: "global_norm/L2Loss_23"
  input: "global_norm/L2Loss_24"
  input: "global_norm/L2Loss_25"
  input: "global_norm/L2Loss_26"
  input: "global_norm/L2Loss_27"
  input: "global_norm/L2Loss_28"
  input: "global_norm/L2Loss_29"
  input: "global_norm/L2Loss_30"
  input: "global_norm/L2Loss_31"
  input: "global_norm/L2Loss_32"
  input: "global_norm/L2Loss_33"
  input: "global_norm/L2Loss_34"
  attr {
    key: "N"
    value {
      i: 35
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/IsFinite"
  op: "IsFinite"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: nan
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Select"
  op: "Select"
  input: "clip_by_global_norm/IsFinite"
  input: "clip_by_global_norm/mul"
  input: "clip_by_global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/AddN_24"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/AddN_27"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_11_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/AddN_25"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_14"
  op: "Identity"
  input: "clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_15"
  op: "Identity"
  input: "clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_16"
  op: "Identity"
  input: "clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_17"
  op: "Identity"
  input: "clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_0/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_18"
  op: "Identity"
  input: "clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_19"
  op: "Identity"
  input: "clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_1/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_20"
  op: "Identity"
  input: "clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_2/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_21"
  op: "Identity"
  input: "clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_3/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_22"
  op: "Identity"
  input: "clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/einsum_9/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_23"
  op: "Identity"
  input: "clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_25"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_24"
  op: "Identity"
  input: "clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_26"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_25"
  op: "Identity"
  input: "clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_27"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_26"
  op: "Identity"
  input: "clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_28"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_27"
  op: "Identity"
  input: "clip_by_global_norm/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_29"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_28"
  op: "Identity"
  input: "clip_by_global_norm/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_30"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_29"
  op: "Identity"
  input: "clip_by_global_norm/mul_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_31"
  op: "Mul"
  input: "gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_30"
  op: "Identity"
  input: "clip_by_global_norm/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model/transformer/layer_1/ff/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_32"
  op: "Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_31"
  op: "Identity"
  input: "clip_by_global_norm/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_33"
  op: "Mul"
  input: "gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_32"
  op: "Identity"
  input: "clip_by_global_norm/mul_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/AttenNet/model_1/sequnece_summary/summary/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_34"
  op: "Mul"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_33"
  op: "Identity"
  input: "clip_by_global_norm/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_35"
  op: "Mul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_34"
  op: "Identity"
  input: "clip_by_global_norm/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias/adam_m"
  input: "AttenNet/model/transformer/r_w_bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_w_bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias/adam_v"
  input: "AttenNet/model/transformer/r_w_bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_w_bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_w_bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_3"
  op: "Mul"
  input: "Mul_3/x"
  input: "AttenNet/model/transformer/r_w_bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_4"
  op: "Mul"
  input: "Mul_4/x"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "Mul_3"
  input: "Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_5"
  op: "Mul"
  input: "Mul_5/x"
  input: "AttenNet/model/transformer/r_w_bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_6"
  op: "Mul"
  input: "Mul_6/x"
  input: "Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "Mul_5"
  input: "Mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "Sqrt"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "add_1"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "mul_7/x"
  input: "AttenNet/model/transformer/r_w_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "truediv_1"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "Select"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "AttenNet/model/transformer/r_w_bias/read"
  input: "mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias"
  input: "sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias/adam_m"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "AttenNet/model/transformer/r_w_bias/adam_v"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_w_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias/adam_m"
  input: "AttenNet/model/transformer/r_r_bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_r_bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias/adam_v"
  input: "AttenNet/model/transformer/r_r_bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_r_bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_r_bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_9"
  op: "Mul"
  input: "Mul_9/x"
  input: "AttenNet/model/transformer/r_r_bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_10"
  op: "Mul"
  input: "Mul_10/x"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "Mul_9"
  input: "Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_11"
  op: "Mul"
  input: "Mul_11/x"
  input: "AttenNet/model/transformer/r_r_bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_12"
  op: "Mul"
  input: "Mul_12/x"
  input: "Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "Mul_11"
  input: "Mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "Sqrt_1"
  input: "add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "add_5"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_13/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "mul_13/x"
  input: "AttenNet/model/transformer/r_r_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "truediv_2"
  input: "mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "Select"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_6"
  op: "Sub"
  input: "AttenNet/model/transformer/r_r_bias/read"
  input: "mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias"
  input: "sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias/adam_m"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "AttenNet/model/transformer/r_r_bias/adam_v"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_r_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000}\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32000
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000}\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32000
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
}
node {
  name: "Mul_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_15"
  op: "Mul"
  input: "Mul_15/x"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_16/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_16/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mul_16/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_16/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_16/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Cast"
  input: "Mul_16/strided_slice/stack"
  input: "Mul_16/strided_slice/stack_1"
  input: "Mul_16/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Mul_16/y"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape_1"
  input: "Mul_16/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mul_16"
  op: "Mul"
  input: "Mul_16/x"
  input: "Mul_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_9"
  op: "Add"
  input: "Mul_15"
  input: "Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_17"
  op: "Mul"
  input: "Mul_17/x"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Square_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square_2/strided_slice"
  op: "StridedSlice"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Cast"
  input: "Square_2/strided_slice/stack"
  input: "Square_2/strided_slice/stack_1"
  input: "Square_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Square_2/x"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  input: "gradients/AttenNet/model/transformer/word_embedding/embedding_lookup_grad/Reshape_1"
  input: "Square_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "Square_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_18"
  op: "Mul"
  input: "Mul_18/x"
  input: "Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_10"
  op: "Add"
  input: "Mul_17"
  input: "Mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_11"
  op: "Add"
  input: "Sqrt_2"
  input: "add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "add_9"
  input: "add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_19/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_19"
  op: "Mul"
  input: "mul_19/x"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_12"
  op: "Add"
  input: "truediv_3"
  input: "mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_20"
  op: "Mul"
  input: "Select"
  input: "add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_7"
  op: "Sub"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/read"
  input: "mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table"
  input: "sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
  input: "add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/word_embedding/lookup_table/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias/adam_m"
  input: "AttenNet/model/transformer/r_s_bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_s_bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias/adam_v"
  input: "AttenNet/model/transformer/r_s_bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/r_s_bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/r_s_bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_21/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_21"
  op: "Mul"
  input: "Mul_21/x"
  input: "AttenNet/model/transformer/r_s_bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_22/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_22"
  op: "Mul"
  input: "Mul_22/x"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_13"
  op: "Add"
  input: "Mul_21"
  input: "Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_23"
  op: "Mul"
  input: "Mul_23/x"
  input: "AttenNet/model/transformer/r_s_bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_24"
  op: "Mul"
  input: "Mul_24/x"
  input: "Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_14"
  op: "Add"
  input: "Mul_23"
  input: "Mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_3"
  op: "Sqrt"
  input: "add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_15"
  op: "Add"
  input: "Sqrt_3"
  input: "add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "add_13"
  input: "add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_25/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_25"
  op: "Mul"
  input: "mul_25/x"
  input: "AttenNet/model/transformer/r_s_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_16"
  op: "Add"
  input: "truediv_4"
  input: "mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_26"
  op: "Mul"
  input: "Select"
  input: "add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_8"
  op: "Sub"
  input: "AttenNet/model/transformer/r_s_bias/read"
  input: "mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias"
  input: "sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias/adam_m"
  input: "add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "AttenNet/model/transformer/r_s_bias/adam_v"
  input: "add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/r_s_bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed/adam_m"
  input: "AttenNet/model/transformer/seg_embed/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/seg_embed/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed/adam_v"
  input: "AttenNet/model/transformer/seg_embed/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/seg_embed/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/seg_embed/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_v"
      }
    }
  }
}
node {
  name: "Mul_27/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_27"
  op: "Mul"
  input: "Mul_27/x"
  input: "AttenNet/model/transformer/seg_embed/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_28/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_28"
  op: "Mul"
  input: "Mul_28/x"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_17"
  op: "Add"
  input: "Mul_27"
  input: "Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_29"
  op: "Mul"
  input: "Mul_29/x"
  input: "AttenNet/model/transformer/seg_embed/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_4"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_30"
  op: "Mul"
  input: "Mul_30/x"
  input: "Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_18"
  op: "Add"
  input: "Mul_29"
  input: "Mul_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_4"
  op: "Sqrt"
  input: "add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_19/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_19"
  op: "Add"
  input: "Sqrt_4"
  input: "add_19/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "add_17"
  input: "add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_31/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_31"
  op: "Mul"
  input: "mul_31/x"
  input: "AttenNet/model/transformer/seg_embed/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_20"
  op: "Add"
  input: "truediv_5"
  input: "mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_32"
  op: "Mul"
  input: "Select"
  input: "add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_9"
  op: "Sub"
  input: "AttenNet/model/transformer/seg_embed/read"
  input: "mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed"
  input: "sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed/adam_m"
  input: "add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "AttenNet/model/transformer/seg_embed/adam_v"
  input: "add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/seg_embed/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_33/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_33"
  op: "Mul"
  input: "Mul_33/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_34/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_34"
  op: "Mul"
  input: "Mul_34/x"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_21"
  op: "Add"
  input: "Mul_33"
  input: "Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_35"
  op: "Mul"
  input: "Mul_35/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_5"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_36"
  op: "Mul"
  input: "Mul_36/x"
  input: "Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_22"
  op: "Add"
  input: "Mul_35"
  input: "Mul_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_5"
  op: "Sqrt"
  input: "add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_23/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_23"
  op: "Add"
  input: "Sqrt_5"
  input: "add_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "add_21"
  input: "add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_37/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_37"
  op: "Mul"
  input: "mul_37/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_24"
  op: "Add"
  input: "truediv_6"
  input: "mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_38"
  op: "Mul"
  input: "Select"
  input: "add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_10"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/read"
  input: "mul_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
  input: "sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
  input: "add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
  input: "add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_39/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_39"
  op: "Mul"
  input: "Mul_39/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_40/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_40"
  op: "Mul"
  input: "Mul_40/x"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_25"
  op: "Add"
  input: "Mul_39"
  input: "Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_41/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_41"
  op: "Mul"
  input: "Mul_41/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_6"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_42"
  op: "Mul"
  input: "Mul_42/x"
  input: "Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_26"
  op: "Add"
  input: "Mul_41"
  input: "Mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_6"
  op: "Sqrt"
  input: "add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_27/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_27"
  op: "Add"
  input: "Sqrt_6"
  input: "add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_7"
  op: "RealDiv"
  input: "add_25"
  input: "add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_43/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_43"
  op: "Mul"
  input: "mul_43/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_28"
  op: "Add"
  input: "truediv_7"
  input: "mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_44"
  op: "Mul"
  input: "Select"
  input: "add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_11"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/read"
  input: "mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
  input: "sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
  input: "add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
  input: "add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_45/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_45"
  op: "Mul"
  input: "Mul_45/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_46/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_46"
  op: "Mul"
  input: "Mul_46/x"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_29"
  op: "Add"
  input: "Mul_45"
  input: "Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_47"
  op: "Mul"
  input: "Mul_47/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_7"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_48"
  op: "Mul"
  input: "Mul_48/x"
  input: "Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_30"
  op: "Add"
  input: "Mul_47"
  input: "Mul_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_7"
  op: "Sqrt"
  input: "add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_31/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_31"
  op: "Add"
  input: "Sqrt_7"
  input: "add_31/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_8"
  op: "RealDiv"
  input: "add_29"
  input: "add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_49/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_49"
  op: "Mul"
  input: "mul_49/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_32"
  op: "Add"
  input: "truediv_8"
  input: "mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_50"
  op: "Mul"
  input: "Select"
  input: "add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_12"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/read"
  input: "mul_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
  input: "sub_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
  input: "add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
  input: "add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_51/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_51"
  op: "Mul"
  input: "Mul_51/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_52/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_52"
  op: "Mul"
  input: "Mul_52/x"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_33"
  op: "Add"
  input: "Mul_51"
  input: "Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_53/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_53"
  op: "Mul"
  input: "Mul_53/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_8"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_54"
  op: "Mul"
  input: "Mul_54/x"
  input: "Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_34"
  op: "Add"
  input: "Mul_53"
  input: "Mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_8"
  op: "Sqrt"
  input: "add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_35/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_35"
  op: "Add"
  input: "Sqrt_8"
  input: "add_35/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_9"
  op: "RealDiv"
  input: "add_33"
  input: "add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_55/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_55"
  op: "Mul"
  input: "mul_55/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_36"
  op: "Add"
  input: "truediv_9"
  input: "mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_56"
  op: "Mul"
  input: "Select"
  input: "add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_13"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/read"
  input: "mul_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
  input: "sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
  input: "add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
  input: "add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_57/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_57"
  op: "Mul"
  input: "Mul_57/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_58/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_58"
  op: "Mul"
  input: "Mul_58/x"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_37"
  op: "Add"
  input: "Mul_57"
  input: "Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_59"
  op: "Mul"
  input: "Mul_59/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_9"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_60"
  op: "Mul"
  input: "Mul_60/x"
  input: "Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_38"
  op: "Add"
  input: "Mul_59"
  input: "Mul_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_9"
  op: "Sqrt"
  input: "add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_39/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_39"
  op: "Add"
  input: "Sqrt_9"
  input: "add_39/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_10"
  op: "RealDiv"
  input: "add_37"
  input: "add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_61/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_61"
  op: "Mul"
  input: "mul_61/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_40"
  op: "Add"
  input: "truediv_10"
  input: "mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_62"
  op: "Mul"
  input: "Select"
  input: "add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_14"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/read"
  input: "mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
  input: "sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
  input: "add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
  input: "add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
}
node {
  name: "Mul_63/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_63"
  op: "Mul"
  input: "Mul_63/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_64/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_64"
  op: "Mul"
  input: "Mul_64/x"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_41"
  op: "Add"
  input: "Mul_63"
  input: "Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_65/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_65"
  op: "Mul"
  input: "Mul_65/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_10"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_66"
  op: "Mul"
  input: "Mul_66/x"
  input: "Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_42"
  op: "Add"
  input: "Mul_65"
  input: "Mul_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_10"
  op: "Sqrt"
  input: "add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_43/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_43"
  op: "Add"
  input: "Sqrt_10"
  input: "add_43/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_11"
  op: "RealDiv"
  input: "add_41"
  input: "add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_67"
  op: "Mul"
  input: "Select"
  input: "truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_15"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/read"
  input: "mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
  input: "sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
  input: "add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
  input: "add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
}
node {
  name: "Mul_68/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_68"
  op: "Mul"
  input: "Mul_68/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_69/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_69"
  op: "Mul"
  input: "Mul_69/x"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_44"
  op: "Add"
  input: "Mul_68"
  input: "Mul_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_70/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_70"
  op: "Mul"
  input: "Mul_70/x"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_11"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_71/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_71"
  op: "Mul"
  input: "Mul_71/x"
  input: "Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_45"
  op: "Add"
  input: "Mul_70"
  input: "Mul_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_11"
  op: "Sqrt"
  input: "add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_46"
  op: "Add"
  input: "Sqrt_11"
  input: "add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_12"
  op: "RealDiv"
  input: "add_44"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_72"
  op: "Mul"
  input: "Select"
  input: "truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_16"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/read"
  input: "mul_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
  input: "sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
  input: "add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
  input: "add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_73/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_73"
  op: "Mul"
  input: "Mul_73/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_74/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_74"
  op: "Mul"
  input: "Mul_74/x"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_47"
  op: "Add"
  input: "Mul_73"
  input: "Mul_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_75/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_75"
  op: "Mul"
  input: "Mul_75/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_12"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_76/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_76"
  op: "Mul"
  input: "Mul_76/x"
  input: "Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_48"
  op: "Add"
  input: "Mul_75"
  input: "Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_12"
  op: "Sqrt"
  input: "add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_49/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_49"
  op: "Add"
  input: "Sqrt_12"
  input: "add_49/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_13"
  op: "RealDiv"
  input: "add_47"
  input: "add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_77/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_77"
  op: "Mul"
  input: "mul_77/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_50"
  op: "Add"
  input: "truediv_13"
  input: "mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_78"
  op: "Mul"
  input: "Select"
  input: "add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_17"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/read"
  input: "mul_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
  input: "sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
  input: "add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
  input: "add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_79/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_79"
  op: "Mul"
  input: "Mul_79/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_80/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_80"
  op: "Mul"
  input: "Mul_80/x"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_51"
  op: "Add"
  input: "Mul_79"
  input: "Mul_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_81/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_81"
  op: "Mul"
  input: "Mul_81/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_13"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_82/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_82"
  op: "Mul"
  input: "Mul_82/x"
  input: "Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_52"
  op: "Add"
  input: "Mul_81"
  input: "Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_13"
  op: "Sqrt"
  input: "add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_53/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_53"
  op: "Add"
  input: "Sqrt_13"
  input: "add_53/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_14"
  op: "RealDiv"
  input: "add_51"
  input: "add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_83"
  op: "Mul"
  input: "Select"
  input: "truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_18"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/read"
  input: "mul_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias"
  input: "sub_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
  input: "add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
  input: "add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_84"
  op: "Mul"
  input: "Mul_84/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_85/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_85"
  op: "Mul"
  input: "Mul_85/x"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_54"
  op: "Add"
  input: "Mul_84"
  input: "Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_86/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_86"
  op: "Mul"
  input: "Mul_86/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_14"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_87/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_87"
  op: "Mul"
  input: "Mul_87/x"
  input: "Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_55"
  op: "Add"
  input: "Mul_86"
  input: "Mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_14"
  op: "Sqrt"
  input: "add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_56"
  op: "Add"
  input: "Sqrt_14"
  input: "add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_15"
  op: "RealDiv"
  input: "add_54"
  input: "add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_88/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_88"
  op: "Mul"
  input: "mul_88/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_57"
  op: "Add"
  input: "truediv_15"
  input: "mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_89"
  op: "Mul"
  input: "Select"
  input: "add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_19"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/read"
  input: "mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
  input: "sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
  input: "add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
  input: "add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_90"
  op: "Mul"
  input: "Mul_90/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_91/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_91"
  op: "Mul"
  input: "Mul_91/x"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_58"
  op: "Add"
  input: "Mul_90"
  input: "Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_92/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_92"
  op: "Mul"
  input: "Mul_92/x"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_15"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_93/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_93"
  op: "Mul"
  input: "Mul_93/x"
  input: "Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_59"
  op: "Add"
  input: "Mul_92"
  input: "Mul_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_15"
  op: "Sqrt"
  input: "add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_60"
  op: "Add"
  input: "Sqrt_15"
  input: "add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_16"
  op: "RealDiv"
  input: "add_58"
  input: "add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_94"
  op: "Mul"
  input: "Select"
  input: "truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_20"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/read"
  input: "mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias"
  input: "sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
  input: "add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
  input: "add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
      }
    }
  }
}
node {
  name: "Mul_95/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_95"
  op: "Mul"
  input: "Mul_95/x"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_96"
  op: "Mul"
  input: "Mul_96/x"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_61"
  op: "Add"
  input: "Mul_95"
  input: "Mul_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_97/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_97"
  op: "Mul"
  input: "Mul_97/x"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_16"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_98/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_98"
  op: "Mul"
  input: "Mul_98/x"
  input: "Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_62"
  op: "Add"
  input: "Mul_97"
  input: "Mul_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_16"
  op: "Sqrt"
  input: "add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_63/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_63"
  op: "Add"
  input: "Sqrt_16"
  input: "add_63/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_17"
  op: "RealDiv"
  input: "add_61"
  input: "add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_99"
  op: "Mul"
  input: "Select"
  input: "truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_21"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/read"
  input: "mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
  input: "sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
  input: "add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
  input: "add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
}
node {
  name: "Mul_100/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_100"
  op: "Mul"
  input: "Mul_100/x"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_101/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_101"
  op: "Mul"
  input: "Mul_101/x"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_64"
  op: "Add"
  input: "Mul_100"
  input: "Mul_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_102"
  op: "Mul"
  input: "Mul_102/x"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_17"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_103/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_103"
  op: "Mul"
  input: "Mul_103/x"
  input: "Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_65"
  op: "Add"
  input: "Mul_102"
  input: "Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_17"
  op: "Sqrt"
  input: "add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_66"
  op: "Add"
  input: "Sqrt_17"
  input: "add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_18"
  op: "RealDiv"
  input: "add_64"
  input: "add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_104"
  op: "Mul"
  input: "Select"
  input: "truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_22"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/read"
  input: "mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
  input: "sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
  input: "add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
  input: "add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_105/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_105"
  op: "Mul"
  input: "Mul_105/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_106/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_106"
  op: "Mul"
  input: "Mul_106/x"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_67"
  op: "Add"
  input: "Mul_105"
  input: "Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_107/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_107"
  op: "Mul"
  input: "Mul_107/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_18"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_108"
  op: "Mul"
  input: "Mul_108/x"
  input: "Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_68"
  op: "Add"
  input: "Mul_107"
  input: "Mul_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_18"
  op: "Sqrt"
  input: "add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_69/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_69"
  op: "Add"
  input: "Sqrt_18"
  input: "add_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_19"
  op: "RealDiv"
  input: "add_67"
  input: "add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_109/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_109"
  op: "Mul"
  input: "mul_109/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_70"
  op: "Add"
  input: "truediv_19"
  input: "mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_110"
  op: "Mul"
  input: "Select"
  input: "add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_23"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/read"
  input: "mul_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
  input: "sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
  input: "add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
  input: "add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_111/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_111"
  op: "Mul"
  input: "Mul_111/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_112/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_112"
  op: "Mul"
  input: "Mul_112/x"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_71"
  op: "Add"
  input: "Mul_111"
  input: "Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_113/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_113"
  op: "Mul"
  input: "Mul_113/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_19"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_114"
  op: "Mul"
  input: "Mul_114/x"
  input: "Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_72"
  op: "Add"
  input: "Mul_113"
  input: "Mul_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_19"
  op: "Sqrt"
  input: "add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_73/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_73"
  op: "Add"
  input: "Sqrt_19"
  input: "add_73/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_20"
  op: "RealDiv"
  input: "add_71"
  input: "add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_115/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_115"
  op: "Mul"
  input: "mul_115/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_74"
  op: "Add"
  input: "truediv_20"
  input: "mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_116"
  op: "Mul"
  input: "Select"
  input: "add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_24"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/read"
  input: "mul_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
  input: "sub_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
  input: "add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
  input: "add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_117/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_117"
  op: "Mul"
  input: "Mul_117/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_118/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_118"
  op: "Mul"
  input: "Mul_118/x"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_75"
  op: "Add"
  input: "Mul_117"
  input: "Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_119/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_119"
  op: "Mul"
  input: "Mul_119/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_20"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_120/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_120"
  op: "Mul"
  input: "Mul_120/x"
  input: "Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_76"
  op: "Add"
  input: "Mul_119"
  input: "Mul_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_20"
  op: "Sqrt"
  input: "add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_77/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_77"
  op: "Add"
  input: "Sqrt_20"
  input: "add_77/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_21"
  op: "RealDiv"
  input: "add_75"
  input: "add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_121/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_121"
  op: "Mul"
  input: "mul_121/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_78"
  op: "Add"
  input: "truediv_21"
  input: "mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_122"
  op: "Mul"
  input: "Select"
  input: "add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_25"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/read"
  input: "mul_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
  input: "sub_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
  input: "add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
  input: "add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_123/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_123"
  op: "Mul"
  input: "Mul_123/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_124/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_124"
  op: "Mul"
  input: "Mul_124/x"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_79"
  op: "Add"
  input: "Mul_123"
  input: "Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_125/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_125"
  op: "Mul"
  input: "Mul_125/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_21"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_126/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_126"
  op: "Mul"
  input: "Mul_126/x"
  input: "Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_80"
  op: "Add"
  input: "Mul_125"
  input: "Mul_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_21"
  op: "Sqrt"
  input: "add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_81/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_81"
  op: "Add"
  input: "Sqrt_21"
  input: "add_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_22"
  op: "RealDiv"
  input: "add_79"
  input: "add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_127/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_127"
  op: "Mul"
  input: "mul_127/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_82"
  op: "Add"
  input: "truediv_22"
  input: "mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_128"
  op: "Mul"
  input: "Select"
  input: "add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_26"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/read"
  input: "mul_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
  input: "sub_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
  input: "add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
  input: "add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_129/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_129"
  op: "Mul"
  input: "Mul_129/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_130/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_130"
  op: "Mul"
  input: "Mul_130/x"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_83"
  op: "Add"
  input: "Mul_129"
  input: "Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_131/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_131"
  op: "Mul"
  input: "Mul_131/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_22"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_132/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_132"
  op: "Mul"
  input: "Mul_132/x"
  input: "Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_84"
  op: "Add"
  input: "Mul_131"
  input: "Mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_22"
  op: "Sqrt"
  input: "add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_85/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_85"
  op: "Add"
  input: "Sqrt_22"
  input: "add_85/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_23"
  op: "RealDiv"
  input: "add_83"
  input: "add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_133/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_133"
  op: "Mul"
  input: "mul_133/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_86"
  op: "Add"
  input: "truediv_23"
  input: "mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_134"
  op: "Mul"
  input: "Select"
  input: "add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_27"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/read"
  input: "mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
  input: "sub_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
  input: "add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
  input: "add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
}
node {
  name: "Mul_135/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_135"
  op: "Mul"
  input: "Mul_135/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_136/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_136"
  op: "Mul"
  input: "Mul_136/x"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_87"
  op: "Add"
  input: "Mul_135"
  input: "Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_137/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_137"
  op: "Mul"
  input: "Mul_137/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_23"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_138/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_138"
  op: "Mul"
  input: "Mul_138/x"
  input: "Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_88"
  op: "Add"
  input: "Mul_137"
  input: "Mul_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_23"
  op: "Sqrt"
  input: "add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_89/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_89"
  op: "Add"
  input: "Sqrt_23"
  input: "add_89/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_24"
  op: "RealDiv"
  input: "add_87"
  input: "add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_139"
  op: "Mul"
  input: "Select"
  input: "truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_28"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/read"
  input: "mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
  input: "sub_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
  input: "add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
  input: "add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
}
node {
  name: "Mul_140/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_140"
  op: "Mul"
  input: "Mul_140/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_141/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_141"
  op: "Mul"
  input: "Mul_141/x"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_90"
  op: "Add"
  input: "Mul_140"
  input: "Mul_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_142/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_142"
  op: "Mul"
  input: "Mul_142/x"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_24"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_143/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_143"
  op: "Mul"
  input: "Mul_143/x"
  input: "Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_91"
  op: "Add"
  input: "Mul_142"
  input: "Mul_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_24"
  op: "Sqrt"
  input: "add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_92"
  op: "Add"
  input: "Sqrt_24"
  input: "add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_25"
  op: "RealDiv"
  input: "add_90"
  input: "add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_144"
  op: "Mul"
  input: "Select"
  input: "truediv_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_29"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/read"
  input: "mul_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
  input: "sub_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
  input: "add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
  input: "add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_145/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_145"
  op: "Mul"
  input: "Mul_145/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_146/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_146"
  op: "Mul"
  input: "Mul_146/x"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_93"
  op: "Add"
  input: "Mul_145"
  input: "Mul_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_147/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_147"
  op: "Mul"
  input: "Mul_147/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_25"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_148/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_148"
  op: "Mul"
  input: "Mul_148/x"
  input: "Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_94"
  op: "Add"
  input: "Mul_147"
  input: "Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_25"
  op: "Sqrt"
  input: "add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_95/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_95"
  op: "Add"
  input: "Sqrt_25"
  input: "add_95/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_26"
  op: "RealDiv"
  input: "add_93"
  input: "add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_149/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_149"
  op: "Mul"
  input: "mul_149/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_96"
  op: "Add"
  input: "truediv_26"
  input: "mul_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_150"
  op: "Mul"
  input: "Select"
  input: "add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_30"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/read"
  input: "mul_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
  input: "sub_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
  input: "add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
  input: "add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_151/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_151"
  op: "Mul"
  input: "Mul_151/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_152/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_152"
  op: "Mul"
  input: "Mul_152/x"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_97"
  op: "Add"
  input: "Mul_151"
  input: "Mul_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_153/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_153"
  op: "Mul"
  input: "Mul_153/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_26"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_154/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_154"
  op: "Mul"
  input: "Mul_154/x"
  input: "Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_98"
  op: "Add"
  input: "Mul_153"
  input: "Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_26"
  op: "Sqrt"
  input: "add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_99/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_99"
  op: "Add"
  input: "Sqrt_26"
  input: "add_99/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_27"
  op: "RealDiv"
  input: "add_97"
  input: "add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_155"
  op: "Mul"
  input: "Select"
  input: "truediv_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_31"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/read"
  input: "mul_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias"
  input: "sub_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
  input: "add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
  input: "add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_156/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_156"
  op: "Mul"
  input: "Mul_156/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_157/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_157"
  op: "Mul"
  input: "Mul_157/x"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_100"
  op: "Add"
  input: "Mul_156"
  input: "Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_158/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_158"
  op: "Mul"
  input: "Mul_158/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_27"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_159/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_159"
  op: "Mul"
  input: "Mul_159/x"
  input: "Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_101"
  op: "Add"
  input: "Mul_158"
  input: "Mul_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_27"
  op: "Sqrt"
  input: "add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_102"
  op: "Add"
  input: "Sqrt_27"
  input: "add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_28"
  op: "RealDiv"
  input: "add_100"
  input: "add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_160/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_160"
  op: "Mul"
  input: "mul_160/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_103"
  op: "Add"
  input: "truediv_28"
  input: "mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_161"
  op: "Mul"
  input: "Select"
  input: "add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_32"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/read"
  input: "mul_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
  input: "sub_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
  input: "add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
  input: "add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_162/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_162"
  op: "Mul"
  input: "Mul_162/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_163/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_163"
  op: "Mul"
  input: "Mul_163/x"
  input: "clip_by_global_norm/clip_by_global_norm/_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_104"
  op: "Add"
  input: "Mul_162"
  input: "Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_164/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_164"
  op: "Mul"
  input: "Mul_164/x"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_28"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_165/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_165"
  op: "Mul"
  input: "Mul_165/x"
  input: "Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_105"
  op: "Add"
  input: "Mul_164"
  input: "Mul_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_28"
  op: "Sqrt"
  input: "add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_106/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_106"
  op: "Add"
  input: "Sqrt_28"
  input: "add_106/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_29"
  op: "RealDiv"
  input: "add_104"
  input: "add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_166"
  op: "Mul"
  input: "Select"
  input: "truediv_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_33"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/read"
  input: "mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias"
  input: "sub_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
  input: "add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
  input: "add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
      }
    }
  }
}
node {
  name: "Mul_167/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_167"
  op: "Mul"
  input: "Mul_167/x"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_168/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_168"
  op: "Mul"
  input: "Mul_168/x"
  input: "clip_by_global_norm/clip_by_global_norm/_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_107"
  op: "Add"
  input: "Mul_167"
  input: "Mul_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_169/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_169"
  op: "Mul"
  input: "Mul_169/x"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_29"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_170/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_170"
  op: "Mul"
  input: "Mul_170/x"
  input: "Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_108"
  op: "Add"
  input: "Mul_169"
  input: "Mul_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_29"
  op: "Sqrt"
  input: "add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_109/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_109"
  op: "Add"
  input: "Sqrt_29"
  input: "add_109/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_30"
  op: "RealDiv"
  input: "add_107"
  input: "add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_171"
  op: "Mul"
  input: "Select"
  input: "truediv_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_34"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/read"
  input: "mul_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
  input: "sub_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
  input: "add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
  input: "add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
}
node {
  name: "Mul_172/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_172"
  op: "Mul"
  input: "Mul_172/x"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_173/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_173"
  op: "Mul"
  input: "Mul_173/x"
  input: "clip_by_global_norm/clip_by_global_norm/_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_110"
  op: "Add"
  input: "Mul_172"
  input: "Mul_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_174/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_174"
  op: "Mul"
  input: "Mul_174/x"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_30"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_175/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_175"
  op: "Mul"
  input: "Mul_175/x"
  input: "Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_111"
  op: "Add"
  input: "Mul_174"
  input: "Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_30"
  op: "Sqrt"
  input: "add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_112/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_112"
  op: "Add"
  input: "Sqrt_30"
  input: "add_112/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_31"
  op: "RealDiv"
  input: "add_110"
  input: "add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_176"
  op: "Mul"
  input: "Select"
  input: "truediv_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_35"
  op: "Sub"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/read"
  input: "mul_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
  input: "sub_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
  input: "add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
  input: "add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_177/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_177"
  op: "Mul"
  input: "Mul_177/x"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_178/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_178"
  op: "Mul"
  input: "Mul_178/x"
  input: "clip_by_global_norm/clip_by_global_norm/_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_113"
  op: "Add"
  input: "Mul_177"
  input: "Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_179/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_179"
  op: "Mul"
  input: "Mul_179/x"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_31"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_180/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_180"
  op: "Mul"
  input: "Mul_180/x"
  input: "Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_114"
  op: "Add"
  input: "Mul_179"
  input: "Mul_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_31"
  op: "Sqrt"
  input: "add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_115/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_115"
  op: "Add"
  input: "Sqrt_31"
  input: "add_115/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_32"
  op: "RealDiv"
  input: "add_113"
  input: "add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_181/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_181"
  op: "Mul"
  input: "mul_181/x"
  input: "AttenNet/model/sequnece_summary/summary/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_116"
  op: "Add"
  input: "truediv_32"
  input: "mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_182"
  op: "Mul"
  input: "Select"
  input: "add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_36"
  op: "Sub"
  input: "AttenNet/model/sequnece_summary/summary/kernel/read"
  input: "mul_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel"
  input: "sub_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_m"
  input: "add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/kernel/adam_v"
  input: "add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_m/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_m"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_m/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_m"
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_v/Assign"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_v"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "AttenNet/model/sequnece_summary/summary/bias/adam_v/read"
  op: "Identity"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_183/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_183"
  op: "Mul"
  input: "Mul_183/x"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_184/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_184"
  op: "Mul"
  input: "Mul_184/x"
  input: "clip_by_global_norm/clip_by_global_norm/_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_117"
  op: "Add"
  input: "Mul_183"
  input: "Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_185/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_185"
  op: "Mul"
  input: "Mul_185/x"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_32"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_186/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_186"
  op: "Mul"
  input: "Mul_186/x"
  input: "Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_118"
  op: "Add"
  input: "Mul_185"
  input: "Mul_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_32"
  op: "Sqrt"
  input: "add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_119/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_119"
  op: "Add"
  input: "Sqrt_32"
  input: "add_119/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_33"
  op: "RealDiv"
  input: "add_117"
  input: "add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_187"
  op: "Mul"
  input: "Select"
  input: "truediv_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_37"
  op: "Sub"
  input: "AttenNet/model/sequnece_summary/summary/bias/read"
  input: "mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias"
  input: "sub_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_m"
  input: "add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "AttenNet/model/sequnece_summary/summary/bias/adam_v"
  input: "add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@AttenNet/model/sequnece_summary/summary/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/adam_m/Assign"
  op: "Assign"
  input: "dense/kernel/adam_m"
  input: "dense/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/adam_m/read"
  op: "Identity"
  input: "dense/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_m"
      }
    }
  }
}
node {
  name: "dense/kernel/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/adam_v/Assign"
  op: "Assign"
  input: "dense/kernel/adam_v"
  input: "dense/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/adam_v/read"
  op: "Identity"
  input: "dense/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_v"
      }
    }
  }
}
node {
  name: "Mul_188/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_188"
  op: "Mul"
  input: "Mul_188/x"
  input: "dense/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_189/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_189"
  op: "Mul"
  input: "Mul_189/x"
  input: "clip_by_global_norm/clip_by_global_norm/_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_120"
  op: "Add"
  input: "Mul_188"
  input: "Mul_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_190/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_190"
  op: "Mul"
  input: "Mul_190/x"
  input: "dense/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_33"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_191/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_191"
  op: "Mul"
  input: "Mul_191/x"
  input: "Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_121"
  op: "Add"
  input: "Mul_190"
  input: "Mul_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_33"
  op: "Sqrt"
  input: "add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_122"
  op: "Add"
  input: "Sqrt_33"
  input: "add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_34"
  op: "RealDiv"
  input: "add_120"
  input: "add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_192/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_192"
  op: "Mul"
  input: "mul_192/x"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_123"
  op: "Add"
  input: "truediv_34"
  input: "mul_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_193"
  op: "Mul"
  input: "Select"
  input: "add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_38"
  op: "Sub"
  input: "dense/kernel/read"
  input: "mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "dense/kernel"
  input: "sub_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "dense/kernel/adam_m"
  input: "add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "dense/kernel/adam_v"
  input: "add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/adam_m/Assign"
  op: "Assign"
  input: "dense/bias/adam_m"
  input: "dense/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/adam_m/read"
  op: "Identity"
  input: "dense/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_m"
      }
    }
  }
}
node {
  name: "dense/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/adam_v/Assign"
  op: "Assign"
  input: "dense/bias/adam_v"
  input: "dense/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/adam_v/read"
  op: "Identity"
  input: "dense/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_v"
      }
    }
  }
}
node {
  name: "Mul_194/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_194"
  op: "Mul"
  input: "Mul_194/x"
  input: "dense/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_195/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_195"
  op: "Mul"
  input: "Mul_195/x"
  input: "clip_by_global_norm/clip_by_global_norm/_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_124"
  op: "Add"
  input: "Mul_194"
  input: "Mul_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_196/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_196"
  op: "Mul"
  input: "Mul_196/x"
  input: "dense/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_34"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_197/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_197"
  op: "Mul"
  input: "Mul_197/x"
  input: "Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_125"
  op: "Add"
  input: "Mul_196"
  input: "Mul_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_34"
  op: "Sqrt"
  input: "add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_126"
  op: "Add"
  input: "Sqrt_34"
  input: "add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_35"
  op: "RealDiv"
  input: "add_124"
  input: "add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_198"
  op: "Mul"
  input: "Select"
  input: "truediv_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_39"
  op: "Sub"
  input: "dense/bias/read"
  input: "mul_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "dense/bias"
  input: "sub_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "dense/bias/adam_m"
  input: "add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "dense/bias/adam_v"
  input: "add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign"
  input: "^Assign_1"
  input: "^Assign_10"
  input: "^Assign_100"
  input: "^Assign_101"
  input: "^Assign_102"
  input: "^Assign_103"
  input: "^Assign_104"
  input: "^Assign_11"
  input: "^Assign_12"
  input: "^Assign_13"
  input: "^Assign_14"
  input: "^Assign_15"
  input: "^Assign_16"
  input: "^Assign_17"
  input: "^Assign_18"
  input: "^Assign_19"
  input: "^Assign_2"
  input: "^Assign_20"
  input: "^Assign_21"
  input: "^Assign_22"
  input: "^Assign_23"
  input: "^Assign_24"
  input: "^Assign_25"
  input: "^Assign_26"
  input: "^Assign_27"
  input: "^Assign_28"
  input: "^Assign_29"
  input: "^Assign_3"
  input: "^Assign_30"
  input: "^Assign_31"
  input: "^Assign_32"
  input: "^Assign_33"
  input: "^Assign_34"
  input: "^Assign_35"
  input: "^Assign_36"
  input: "^Assign_37"
  input: "^Assign_38"
  input: "^Assign_39"
  input: "^Assign_4"
  input: "^Assign_40"
  input: "^Assign_41"
  input: "^Assign_42"
  input: "^Assign_43"
  input: "^Assign_44"
  input: "^Assign_45"
  input: "^Assign_46"
  input: "^Assign_47"
  input: "^Assign_48"
  input: "^Assign_49"
  input: "^Assign_5"
  input: "^Assign_50"
  input: "^Assign_51"
  input: "^Assign_52"
  input: "^Assign_53"
  input: "^Assign_54"
  input: "^Assign_55"
  input: "^Assign_56"
  input: "^Assign_57"
  input: "^Assign_58"
  input: "^Assign_59"
  input: "^Assign_6"
  input: "^Assign_60"
  input: "^Assign_61"
  input: "^Assign_62"
  input: "^Assign_63"
  input: "^Assign_64"
  input: "^Assign_65"
  input: "^Assign_66"
  input: "^Assign_67"
  input: "^Assign_68"
  input: "^Assign_69"
  input: "^Assign_7"
  input: "^Assign_70"
  input: "^Assign_71"
  input: "^Assign_72"
  input: "^Assign_73"
  input: "^Assign_74"
  input: "^Assign_75"
  input: "^Assign_76"
  input: "^Assign_77"
  input: "^Assign_78"
  input: "^Assign_79"
  input: "^Assign_8"
  input: "^Assign_80"
  input: "^Assign_81"
  input: "^Assign_82"
  input: "^Assign_83"
  input: "^Assign_84"
  input: "^Assign_85"
  input: "^Assign_86"
  input: "^Assign_87"
  input: "^Assign_88"
  input: "^Assign_89"
  input: "^Assign_9"
  input: "^Assign_90"
  input: "^Assign_91"
  input: "^Assign_92"
  input: "^Assign_93"
  input: "^Assign_94"
  input: "^Assign_95"
  input: "^Assign_96"
  input: "^Assign_97"
  input: "^Assign_98"
  input: "^Assign_99"
}
node {
  name: "add_127/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_127"
  op: "Add"
  input: "global_step/read"
  input: "add_127/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "global_step"
  input: "add_127"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^Assign_105"
  input: "^group_deps"
}
node {
  name: "init"
  op: "NoOp"
  input: "^AttenNet/model/sequnece_summary/summary/bias/Assign"
  input: "^AttenNet/model/sequnece_summary/summary/bias/adam_m/Assign"
  input: "^AttenNet/model/sequnece_summary/summary/bias/adam_v/Assign"
  input: "^AttenNet/model/sequnece_summary/summary/kernel/Assign"
  input: "^AttenNet/model/sequnece_summary/summary/kernel/adam_m/Assign"
  input: "^AttenNet/model/sequnece_summary/summary/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/beta/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/LayerNorm/gamma/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/bias/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_1/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/bias/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/ff/layer_2/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/beta/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/LayerNorm/gamma/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/k/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/k/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/o/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/o/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/q/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/q/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/r/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/r/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/v/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_0/rel_attn/v/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/beta/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/LayerNorm/gamma/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/bias/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_1/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/bias/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/ff/layer_2/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/beta/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/LayerNorm/gamma/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/k/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/k/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/o/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/o/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/q/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/q/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/r/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/r/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/v/kernel/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_m/Assign"
  input: "^AttenNet/model/transformer/layer_1/rel_attn/v/kernel/adam_v/Assign"
  input: "^AttenNet/model/transformer/r_r_bias/Assign"
  input: "^AttenNet/model/transformer/r_r_bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/r_r_bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/r_s_bias/Assign"
  input: "^AttenNet/model/transformer/r_s_bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/r_s_bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/r_w_bias/Assign"
  input: "^AttenNet/model/transformer/r_w_bias/adam_m/Assign"
  input: "^AttenNet/model/transformer/r_w_bias/adam_v/Assign"
  input: "^AttenNet/model/transformer/seg_embed/Assign"
  input: "^AttenNet/model/transformer/seg_embed/adam_m/Assign"
  input: "^AttenNet/model/transformer/seg_embed/adam_v/Assign"
  input: "^AttenNet/model/transformer/word_embedding/lookup_table/Assign"
  input: "^AttenNet/model/transformer/word_embedding/lookup_table/adam_m/Assign"
  input: "^AttenNet/model/transformer/word_embedding/lookup_table/adam_v/Assign"
  input: "^Variable/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/bias/adam_m/Assign"
  input: "^dense/bias/adam_v/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/kernel/adam_m/Assign"
  input: "^dense/kernel/adam_v/Assign"
  input: "^global_step/Assign"
}
versions {
  producer: 38
}
